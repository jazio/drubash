# -*- coding: utf-8; mode: ruby -*-
# vi: set ft=ruby :

# Author: MichaÃ«l Bruneel <Michael.BRUNEEL@ext.ec.europa.eu>

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.require_version ">= 1.4.1"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "debian"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "path/to/extra/vagrant/debian.box"
  config.vm.box_download_checksum_type = "sha1"
  config.vm.box_download_checksum = "9f48a68048fad552434857fb3dd76702c4c024fd"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network :forwarded_port, guest: 80, host: 8080

  config.ssh.username = "vagrant"
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider :virtualbox do |vb|
    # Use VBoxManage to customize the VM.
    vb.customize ["modifyvm", :id, "--memory", "2048"]
  end

  config.vm.provision :shell, :path => "extra/vagrant/shell/init.sh", :privileged => false
  config.vm.provision :shell, :path => "extra/vagrant/shell/install-puppet.sh"

  # Enable provisioning with Puppet stand alone. Puppet manifests
  # are contained in a directory path relative to this Vagrantfile.
  config.vm.provision :puppet do |puppet|
    puppet.manifests_path = "extra/vagrant/puppet"
    puppet.manifest_file  = "debian.pp"
  end

  config.vm.provision :shell, :path => "extra/vagrant/shell/install-composer.sh", :privileged => false
  config.vm.provision :shell, :path => "extra/vagrant/shell/install-site.sh", :privileged => false

end
